openapi: 3.0.0
info:
  version: 0.1.0
  title: RAPTR Order API
  description:
    The endpoints listed in this API have been created to facilitate the new launcher
servers:
  - url: https://localhost/raptr/api/stjude/v2
    description: Development
tags:
  - name: Bam
  - name: Order
  - name: Project
  - name: Target
paths:
  /bam:
    post:
      summary: Create Bam
      tags:
        - Bam
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sample_target_project_id:
                  description: The SampleTargetProject for the Bam
                  type: integer
                  example: 123456
      responses:
        201:
          description: Bam created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                properties:
                  data:
                    $ref: '#/components/schemas/Bam'
  /order:
    post:
      summary: Create Order
      description: Create a new Order
      tags:
        - Order
      requestBody:
        #required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  description: The primary key for the Project the new Order will be associated with
                  example: 123456
                  type: integer
                suite_id:
                  example: 123456
                  type: integer
                target_name:
                  type: string
                  description: The name of the Target for the new Order
                  example: WHOLE_GENOME
                notes:
                  type: string
              required:
                - project_id
                - suite_id
                - target_name
      responses:
        201:
          description: The newly created Order
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
  /order/{order_id}:
    get:
      summary: Show Order
      tags:
        - Order
      responses:
        200:
          description: Show Order
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
  /order/{order_id}/bam:
    post:
      summary: Add Bam to Order
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bam_id:
                  example: 123456
                  type: integer
              required:
                - bam_id
      responses:
        201:
          description: Bam Added
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                properties:
                  data:
                    allOf:
                      - $ref: '#/components/schemas/Order'
                    properties:
                      bams:
                        type: array
                        items:
                          $ref: '#/components/schemas/Bam'
  /orders:
    get:
      summary: List Orders
      tags:
        - Order
      responses:
        200:
          description: All Orders
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - $ref: '#/components/schemas/Paginated'
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
  /project:
    post:
      summary: Create Project
      tags:
        - Project
      responses:
        201:
          description: Project created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                properties:
                  data:
                    $ref: '#/components/schemas/Project'
  /targets:
    get:
      summary: List Targets
      tags:
        - Target
      responses:
        200:
          description: An array of all available targets
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Success'
                  - $ref: '#/components/schemas/Paginated'
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Target'
components:
  schemas:
    Bam:
      type: object
      properties:
        bam_id:
          example: 123456
          type: integer
        anls_type_id:
          example: 123456
          type: integer
        gedi_source_id:
          example: 123456
          type: integer
        genome_id:
          example: 123456
          type: integer
        sample_target_project_id:
          example: 123456
          type: integer
        qualifier:
          example: '-'
          type: string
        notes:
          example: Some note
          type: string
        status:
          example: Waiting
          type: string
    Order:
      type: object
      properties:
        order_id:
          example: 123456
          type: integer
        project_id:
          example: 123456
          type: integer
        suite_id:
          example: 123456
          type: integer
        analyst_assigned_to:
          example: username
          type: string
        germline_reviewer_assigned_to:
          type: string
        notes:
          type: string
        ord_code:
          description: A secondary identifier for Order records
          example: 123456
          type: integer
        pathologist_assigned_to:
          type: string
        source:
          type: string
        source_type:
          type: string
        username:
          type: string
    Project:
      type: object
      properties:
        project_id:
          description: The primary key of the Project record
          example: 123456
          type: integer
    Target:
      type: object
      properties:
        target_id:
          description: The primary key of the Target record
          example: 123456
          type: integer
        analyte:
          example: DNA
          type: string
        description:
          example: Whole genome sequencing
          type: string
        name:
          description: The name of the Target
          example: WHOLE_GENOME
          type: string
        seq_type:
          description: The sequencing type for the Target
          example: WHOLEGENOME
          type: string
    Success:
      type: object
      properties:
        data:
          type: object
    Paginated:
      type: object
      properties:
        links:
          type: object
          properties:
            first:
              type: string
              description: A uri for the first page of results
            last:
              type: string
              description: A uri for the last page of results
            prev:
              type: string
              description: A uri for the previous page of results
              example: null
            next:
              type: string
              description: A uri for the next page of results
        meta:
          type: object
          properties:
            current_page:
              type: integer
              description: The current page number of results
              example: 1
            from:
              type: integer
              example: 1
              description: The index of the first entry of the current page
            last_page:
              type: integer
              example: 100
              description: The number of pages of results
            path:
              type: string
              description: The uri used to get this page of results
            per_page:
              type: integer
              description: The number of results per page
            to:
              type: integer
              description: The index of the last result of the current page
              example: 15
            total:
              type: integer
              description: The total number of results available for the request
              example: 1500
